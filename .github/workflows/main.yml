name: Build and Release Java Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Install gdown (Google Drive Downloader)
        run: pip install gdown

      - name: Download large build files from Google Drive
        run: |
          mkdir -p ~/wz  # Ensure the directory exists
          gdown --id 1EJfQtXv8xofabqSPpJs7oOgtanAVtEKv -O wz.tar
          tar -xvf wz.tar -C ~/wz

      - name: Create .env file from GitHub Secrets
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env
          echo "DB_URL_FORMAT=${{ secrets.DB_URL_FORMAT }}" >> .env

      - name: Run tests with debug logging
        run: mvn test -X || true  # Run tests, but prevent failure from stopping workflow
      
      - name: Build with Maven (Ignore Test Failures)
        run: mvn clean package -Dmaven.test.failure.ignore=true

      - name: Upload JAR artifact (Always for CI)
        uses: actions/upload-artifact@v4
        with:
          name: mapleglory-jar
          path: target/mapleglory.jar

      - name: Extract version from commit message
        id: get_version
        run: echo "VERSION=$(echo '${{ github.event.head_commit.message }}' | grep -oP '(?<=release:)[0-9]+\.[0-9]+\.[0-9]+')" >> $GITHUB_ENV

      - name: Release to GitHub (Only if commit message starts with 'release:')
        if: github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'release:')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body: "Automated release of version v${{ env.VERSION }}."
          draft: false
          prerelease: false
          files: target/mapleglory.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}  # Using PAT instead of default GITHUB_TOKEN